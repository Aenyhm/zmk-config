/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include "keymap_french.h"

#define ALPHA 0 // Alphas (Optimot layout)
#define SHIFT 1 // Uppercase letters
#define ALTGR 2 // Alternate Alphas
#define SHALT 3 // SHIFT + ALTGR
#define CNTRL 4 // Actions (control) & Navigation
#define SYMBO 5 // Symbols
#define FUNUM 6 // Function and Numbers
#define MEDIA 7 // Media & Volume control
#define GAMER 8 // Let's play!
#define ADMIN 9 // OS, Keyboard & Bluetooth

/ {
    combos {
        /*
           KEY POSITIONS
          ╭────────────────────────╮ ╭────────────────────────╮
          │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
          │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
          │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
          ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
                      ╰────────────╯ ╰────────────╯
        */
        #define LAYER_MOD 37

        compatible = "zmk,combos";
        combo_layer_symbo { key-positions = <LAYER_MOD 19>; bindings = <&to SYMBO>; };
        combo_layer_funum { key-positions = <LAYER_MOD 20>; bindings = <&to FUNUM>; };
        combo_layer_media { key-positions = <LAYER_MOD 21>; bindings = <&to MEDIA>; };
        combo_layer_admin { key-positions = <LAYER_MOD 22>; bindings = <&to ADMIN>; };
        combo_layer_gamer { key-positions = <LAYER_MOD 23>; bindings = <&to GAMER>; };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SHIFT ALTGR>;
            then-layer = <SHALT>;
        };
    };

    macros {
        #define MACRO_CAPS(name, k) \
        ZMK_MACRO(name##_up, bindings = <&macro_tap &kp CAPS &kp k &kp CAPS>;)

        // ALPHA
        ZMK_MACRO(qu, bindings = <&kp FR_Q &kp FR_U>;)

        // SHIFT
        MACRO_CAPS(agrv, FR_AGRV)
        MACRO_CAPS(eacu, FR_EACU)
        ZMK_MACRO(qu_up, bindings = <&kp LS(FR_Q) &kp FR_U>;)
        MACRO_CAPS(egrv, FR_EGRV)

        // SHAFT
        MACRO_CAPS(oe, FR_OE)
        MACRO_CAPS(cced, FR_CCED)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "ALPHA";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  à  |  j  |  o  |  é  |  b  ||        ||  f  |  d  |  l  |  '  |  qu |  x  |
            // |~C]ESC|  a  |  i  |  e  |  u  |  ,  ||        ||  p  |  t  |  s  |  r  |  n  |  ^  |
            // | LGUI |  k  |  y  |  è  |  .  |  w  ||        ||  g  |  c  |  m  |  h  |  v  |  z  |
            //                    | LALT |~LAYER|~S]SPC||  || ENTER| BSPC |~ALTGR|

            bindings = <
&kp TAB        &kp FR_AGRV  &kp FR_J  &kp FR_O     &kp FR_EACU  &kp FR_B           &kp FR_F  &kp FR_D  &kp FR_L   &kp FR_SQT  &qu       &kp FR_X
&lt CNTRL ESC  &kp FR_A     &kp FR_I  &kp FR_E     &kp FR_U     &kp FR_COMMA       &kp FR_P  &kp FR_T  &kp FR_S   &kp FR_R    &kp FR_N  &kp FR_CARET
&kp LGUI       &kp FR_K     &kp FR_Y  &kp FR_EGRV  &kp FR_DOT   &kp FR_W           &kp FR_G  &kp FR_C  &kp FR_M   &kp FR_H    &kp FR_V  &kp FR_Z
                                      &kp LALT     &to ALPHA    &lt SHIFT SPACE    &kp RET   &kp BSPC  &mo ALTGR
            >;
        };

        shift_layer {
            label = "SHIFT";

            // -----------------------------------------------------------------------------------------
            // |      |  À  |  J  |  O  |  É  |  B  ||        ||  F  |  D  |  L  |  ?  |  Qu |  X  |
            // |      |  A  |  I  |  E  |  U  |  ;  ||        ||  P  |  T  |  S  |  R  |  N  |  !  |
            // |      |  K  |  Y  |  È  |  :  |  W  ||        ||  G  |  C  |  M  |  H  |  V  |  Z  |
            //                       |     |     |     ||  ||     |     |     |

            bindings = <
&trans  &agrv_up      &kp LS(FR_J)  &kp LS(FR_O)  &eacu_up      &kp LS(FR_B)    &kp LS(FR_F)  &kp LS(FR_D)  &kp LS(FR_L)  &kp FR_QMARK  &qu_up        &kp LS(FR_X)
&trans  &kp LS(FR_A)  &kp LS(FR_I)  &kp LS(FR_E)  &kp LS(FR_U)  &kp FR_SEMI     &kp LS(FR_P)  &kp LS(FR_T)  &kp LS(FR_S)  &kp LS(FR_R)  &kp LS(FR_N)  &kp FR_EXCL
&trans  &kp LS(FR_K)  &kp LS(FR_Y)  &egrv_up      &kp FR_COLON  &kp LS(FR_W)    &kp LS(FR_G)  &kp LS(FR_C)  &kp LS(FR_M)  &kp LS(FR_H)  &kp LS(FR_V)  &kp LS(FR_Z)
                                    &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };

        altgr_layer {
            label = "ALTGR";

            // TODO: add Windows Alt-codes, apostrophe, quote marks, ellipsis, em dash, degree

            // -----------------------------------------------------------------------------------------
            // |      |     |     |  œ  |     |     ||        ||     |<qml>|<qmr>|<apo>|     |     |
            // |      |     |     |     |  ù  |  -  ||        ||     |     |     |     |     |  ¨  |
            // |      |     |     |     |<ell>|<emd>||        ||     |  ç  |     |     |     |<deg>|
            //                       |     |     |     ||  ||     |     |     |

            bindings = <
&trans  &trans  &trans  &kp FR_OE  &trans       &trans          &trans  &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &kp FR_UGRV  &kp FR_MINUS    &trans  &trans       &trans  &trans  &trans  &kp FR_DIAE
&trans  &trans  &trans  &trans     &trans       &trans          &trans  &kp FR_CCED  &trans  &trans  &trans  &trans
                        &trans     &trans       &trans          &trans  &trans       &trans
            >;
        };

        shalt_layer {
            label = "SHALT";

            // -----------------------------------------------------------------------------------------
            // |      |     |     |  Œ  |     |     ||        ||     |     |     |     |     |     |
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            // |      |     |     |     |     |     ||        ||     |  Ç  |     |     |     |     |
            //                       |     |     |     ||  ||     |     |     |

            bindings = <
&trans  &trans  &trans  &oe_up  &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &cced_up  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        cntrl_layer {
            label = "CONTROL";

            // TODO: add lock session, undo, redo, select all, cut, copy, paste, close

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            //                       |     |     |     ||  ||     | DEL |     |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans   &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &kp DEL  &trans
            >;
        };

        symbo_layer {
            label = "SYMBOL";

            // TODO: add emoji virtual keyboard

            // -----------------------------------------------------------------------------------------
            // |      |  #  |  $  |  "  |  '  |  `  ||        ||  [  |  ]  |  <  |  >  |  *  |  /  |
            // |      |  @  |  ^  |  ~  |  _  |  ,  ||        ||  {  |  }  |  !  |  =  |  +  |  -  |
            // |      |<emo>|  \  |  ?  |  .  |  ;  ||        ||  (  |  )  |  &  | `|` |  :  |  %  |
            //                       |     |     |     ||  ||     |     |     |

            bindings = <
&trans  &kp FR_HASH  &kp FR_DLR    &kp FR_DQT    &kp FR_SQT   &kp FR_GRAVE    &kp FR_LBRC  &kp FR_RBRC  &kp FR_LT    &kp FR_GT     &kp FR_ASTR   &kp FR_SLSH
&trans  &kp FR_AT    &kp FR_CARET  &kp FR_TILD   &kp FR_UNDS  &kp FR_COMMA    &kp FR_LCBR  &kp FR_RCBR  &kp FR_EXCL  &kp FR_EQUAL  &kp FR_PLUS   &kp FR_MINUS
&trans  &trans       &kp FR_BSLS   &kp FR_QMARK  &kp FR_DOT   &kp FR_SEMI     &kp FR_LPRN  &kp FR_RPRN  &kp FR_AMPR  &kp FR_PIPE   &kp FR_COLON  &kp FR_PRCNT
                                   &trans        &trans       &trans          &trans       &trans       &trans
            >;
        };

        funum_layer {
            label = "FNUM";

            // -----------------------------------------------------------------------------------------
            // |      | F1  | F2  | F3  | F4  |  €  ||        ||  ^  |  7  |  8  |  9  |  *  |  /  |
            // |      | F5  | F6  | F7  | F8  |  (  ||        ||  =  |  4  |  5  |  6  |  +  |  -  |
            // |      | F9  | F10 | F11 | F12 |  )  ||        ||  0  |  1  |  2  |  3  |  ,  |  %  |
            //                       |     |     |     ||  ||     |     |  .  |

            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp FR_EURO    &kp FR_CARET  &kp N7  &kp N8      &kp N9  &kp FR_ASTR   &kp FR_SLSH
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp FR_LPRN    &kp FR_EQUAL  &kp N4  &kp N5      &kp N6  &kp FR_PLUS   &kp FR_MINUS
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp FR_RPRN    &kp N0        &kp N1  &kp N2      &kp N3  &kp FR_COMMA  &kp FR_PRCNT
                         &trans   &trans   &trans         &trans        &trans  &kp FR_DOT
            >;
        };

        media_layer {
            label = "MEDIA";

            // TODO: move BT & reset to ADMIN

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |RESET||        ||PREV |PLAY |NEXT |MUTE |VDWN | VUP |
            // |      | LFT | DWN | UP  | RGT | MB1 ||        ||     | LFT | DWN | UP  | RGT | MB1 |
            // |      | BT1 | BT2 | BT3 |BTCLR|USBTt||        || INS |HOME | PDN | PUP | END |PSCRN|
            //                       |     |     |     ||  ||     |     |     |

            bindings = <
&trans  &trans        &trans        &trans        &trans      &bootloader     &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
&trans  &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT   &mkp LCLK       &trans      &kp LEFT  &kp DOWN    &kp UP      &kp RIGHT     &mkp LCLK
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &out OUT_TOG    &kp INS     &kp HOME  &kp PG_DN   &kp PG_UP   &kp END       &kp PSCRN
                                    &trans        &trans      &trans          &trans      &trans    &trans
            >;
        };

        admin_layer {
            label = "ADMIN";

            // TODO

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            // |      |     |     |     |     |     ||        ||     |     |     |     |     |     |
            //                       |     |     |     ||  ||     |     |     |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        gamer_layer {
            label = "GAMER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  a  |  e  |  r  |  t  |  y  ||        || &(1)| é(2)| "(3)| '(4)|     |~ALPHA|
            // |  ESC |  q  |  s  |  z  |  d  |  f  ||        || ((5)| -(6)| è(7)| _(8)|     | LGUI |
            // | LCTRL|  w  |  x  |  c  |  v  |  b  ||        || ç(9)| à(0)| )(°)| =(+)|     |      |
            //                        |LALT|LSHFT|SPACE||  ||ENTER|MB1|MB2|

            bindings = <
&kp TAB    &kp FR_A  &kp FR_E  &kp FR_R  &kp FR_T   &kp FR_Y     &kp FR_AMPR  &kp FR_EACU   &kp FR_DQT   &kp FR_SQT    &none  &to ALPHA
&kp ESC    &kp FR_Q  &kp FR_S  &kp FR_Z  &kp FR_D   &kp FR_F     &kp FR_LPRN  &kp FR_MINUS  &kp FR_EGRV  &kp FR_UNDS   &none  &kp LGUI
&kp LCTRL  &kp FR_W  &kp FR_X  &kp FR_C  &kp FR_V   &kp FR_B     &kp FR_CCED  &kp FR_AGRV   &kp FR_RPRN  &kp FR_EQUAL  &none  &none
                               &kp LALT  &kp LSHFT  &kp SPACE    &kp RET      &mkp LCLK     &mkp RCLK
            >;
        };
    };
};
